[build-system]
requires = ["maturin>=1.7,<2", "typing-extensions>=4.6.0,!=4.7.0"]
build-backend = "maturin"

[project]
name = "ferrocp"
dynamic = ["version"]
description = "FerroCP - A high-performance file copy tool with Python bindings"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "Apache-2.0" }
authors = [{ name = "Long Hao", email = "hal.long@outlook.com" }]
dependencies = [
    "click>=8.0.0",
    "nox>=2025.5.1",
    "typing-extensions>=4.6.0,!=4.7.0",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Filesystems",
]

[dependency-groups]
dev = ["maturin", "pytest>=8.3.5"]
testing = [
    { include-group = "dev" },
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-benchmark>=4.0",
    "pytest-codspeed>=2.2.0",
    "memory-profiler>=0.60",
    "py-spy>=0.3",
    "psutil>=6.0",
    "nox>=2024.4.15",
]
linting = [
    { include-group = "dev" },
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "autoflake>=2.0.0",
]
docs = [
    { include-group = "dev" },
    "sphinx>=7.0.0",
    "pydata-sphinx-theme>=0.14.1",
    "sphinx-autobuild>=2021.3.14",
    "myst-parser>=2.0.0",
    "sphinx-gallery>=0.13.0",
    "pillow>=9.0.0",
    "myst-sphinx-gallery>=0.3.0",
    "myst-nb>=1.0.0",
    "tomli>=2.0.0",
]
build = [
    { include-group = "dev" },
    "build>=0.10.0",
    "twine>=4.0.2",
    "cibuildwheel>=2.16.0",
]
all = [
    { include-group = "dev" },
    { include-group = "testing" },
    { include-group = "linting" },
    { include-group = "docs" },
    { include-group = "build" },
]

[project.urls]
Homepage = "https://github.com/loonghao/ferrocp"
Documentation = "https://loonghao.github.io/ferrocp"
Issues = "https://github.com/loonghao/ferrocp/issues"
Changelog = "https://github.com/loonghao/ferrocp/blob/main/CHANGELOG.md"

[project.scripts]
ferrocp = "ferrocp.cli:main"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.3.0"
tag_format = "v$version"
version_files = ["Cargo.toml:version", "python/ferrocp/__version__.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["ferrocp"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true
disable_error_code = ["type-arg", "misc", "no-any-return"]

[tool.ruff]
line-length = 120
target-version = "py39"
src = ["python", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = ["D203", "D213", "ARG001", "D107", "D105", "D102", "F811", "I001"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"tests/*.py" = [
    "ARG001",
    "F401",
    "F811",
    "D107",
    "D105",
    "D102",
    "E501",
    "I001",
]
"nox_actions/*.py" = ["D100", "D103", "D104", "E402"]
"noxfile.py" = ["D100", "E402", "D401", "D400"]
"examples/*.py" = ["D401", "D415", "RUF013", "E722", "D400"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 120
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
# Enforce import section headers.
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
import_heading_firstparty = "Import local modules"

profile = "black"
line_length = 120
force_sort_within_sections = true
force_single_line = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["ferrocp"]

[tool.maturin]
python-source = "python"
module-name = "ferrocp._ferrocp"
bindings = "pyo3"
manifest-path = "crates/ferrocp-python/Cargo.toml"
# Compatibility settings
abi3 = true
# Strip debug symbols in release
strip = true

[tool.semantic_release]
version_variable = [
    "python/ferrocp/__version__.py:__version__",
    "pyproject.toml:version",
]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "maturin build --release"
