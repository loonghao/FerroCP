[build-system]
requires = [
    "scikit-build-core>=0.5.0",
    "pybind11>=2.10.0",
    "setuptools>=61.0.0",
    "wheel>=0.36.0",
    "setuptools_scm>=8.0.0",
]
build-backend = "scikit_build_core.build"

[project]
name = "py-eacopy"
dynamic = ["version"]
description = "Python bindings for EACopy, a high-performance file copy tool"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "BSD-3-Clause"}
authors = [
    {name = "Long Hao", email = "hal.long@outlook.com"},
]
dependencies = [
    "click>=8.0.0",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Filesystems",
]

[project.optional-dependencies]
dev = [
    "nox>=2023.4.22",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
]
docs = [
    "sphinx>=7.0.0",
    "pydata-sphinx-theme>=0.14.1",
    "sphinx-autobuild>=2021.3.14",
    "myst-parser>=2.0.0",
    "sphinx-gallery>=0.13.0",
    "pillow>=9.0.0",
    "myst-sphinx-gallery>=0.3.0",
    "myst-nb>=1.0.0",
    "tomli>=2.0.0",
]
lint = [
    "black<25.1.1",
    "ruff<0.0.270",
    "isort<6.0.2",
    "autoflake>=2.0.0",
]
build = [
    "build>=0.10.0",
    "twine>=4.0.2",
    "cibuildwheel>=2.16.0",
]

[project.urls]
Homepage = "https://github.com/loonghao/py-eacopy"
Documentation = "https://loonghao.github.io/py-eacopy"
Issues = "https://github.com/loonghao/py-eacopy/issues"
Changelog = "https://github.com/loonghao/py-eacopy/blob/main/CHANGELOG.md"

[project.scripts]
eacopy = "py_eacopy.cli:main"

[tool.scikit-build]
# 基本配置
wheel.packages = ["src/py_eacopy"]
wheel.exclude = ["tests/*"]
wheel.expand-macos-universal-tags = false
sdist.include = ["src/py_eacopy/*", "src/binding/*", "CMakeLists.txt", "LICENSE", "README.md"]
sdist.exclude = ["tests/data/*"]
# 启用实验性功能
experimental = true

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
# 格式: 1.2.3 (不带 'v' 前缀)
tag_regex = "^(?P<version>[0-9]+\\.[0-9]+\\.[0-9]+)(?P<dev>-[a-zA-Z0-9]+)?$"
local_scheme = "no-local-version"
# 不使用 dev0 后缀以避免元数据不匹配
version_scheme = "release-branch-semver"
# 当没有 Git 标签时的回退版本
fallback_version = "0.0.1.dev0"

[tool.scikit-build.cmake]
version = ">=3.15"
build-type = "Release"
# 平台特定配置在 CMakeLists.txt 中处理

[tool.scikit-build.cmake.define]
# 确保共享库的位置无关代码
CMAKE_POSITION_INDEPENDENT_CODE = "ON"
# 使用动态运行时库以匹配 Python 的期望
CMAKE_MSVC_RUNTIME_LIBRARY = "MultiThreadedDLL"
# 禁用有限 API 以获得最大兼容性
PYTHON_LIMITED_API = "OFF"
# 我们在 CMakeLists.txt 中手动处理符号导出
CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS = "OFF"
# 禁用 ABI3 模式
SKBUILD_SOABI = "OFF"
# 使用 pybind11 的默认 Python 处理
PYBIND11_FINDPYTHON = "ON"
