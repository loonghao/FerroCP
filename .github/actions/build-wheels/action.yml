name: 'Build Wheels'
description: 'Builds Python wheels using cibuildwheel'

inputs:
  platform:
    description: 'Platform (linux, windows, macos, macos-arm)'
    required: true
    default: 'linux'
  python:
    description: 'Python version (cp38, cp39, etc.)'
    required: true
    default: 'cp310'
  config-file:
    description: 'Path to cibuildwheel config file'
    required: false
    default: ''
  build-verbosity:
    description: 'Build verbosity level'
    required: false
    default: '1'

runs:
  using: "composite"
  steps:
    - name: Install cibuildwheel
      shell: bash
      run: |
        python -m pip install cibuildwheel>=2.16.0

    - name: Build wheels
      shell: bash
      run: |
        # 设置环境变量
        export CIBW_BUILD_VERBOSITY="${{ inputs.build-verbosity }}"
        
        # 根据平台设置构建选项
        if [[ "${{ inputs.platform }}" == "linux" ]]; then
          export CIBW_ARCHS="auto"
          export CIBW_PLATFORM="linux"
        elif [[ "${{ inputs.platform }}" == "windows" ]]; then
          export CIBW_ARCHS="auto"
          export CIBW_PLATFORM="windows"
        elif [[ "${{ inputs.platform }}" == "macos" ]]; then
          export CIBW_ARCHS="x86_64"
          export CIBW_PLATFORM="macos"
        elif [[ "${{ inputs.platform }}" == "macos-arm" ]]; then
          export CIBW_ARCHS="arm64"
          export CIBW_PLATFORM="macos"
        fi
        
        # 设置Python版本
        export CIBW_BUILD="${{ inputs.python }}-*"
        
        # 构建轮子
        python -m cibuildwheel --output-dir wheelhouse
        
        # 列出构建的轮子
        ls -la wheelhouse/

    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      shell: bash
      with:
        name: wheels-${{ inputs.platform }}-${{ inputs.python }}
        path: wheelhouse/*.whl
        if-no-files-found: error
