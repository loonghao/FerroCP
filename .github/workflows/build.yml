name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - build
          - test
          - lint
          - docs

env:
  CCACHE_MAX_SIZE: 500M
  CIBW_BUILD_VERBOSITY: 3
  CPM_SOURCE_CACHE: ${{ github.workspace }}/.cache/CPM

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.task == 'all' || github.event.inputs.task == 'lint' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox
      
      - name: Run linting
        run: nox -s lint

  build-linux:
    name: Build Linux (Python ${{ matrix.python }})
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.task == 'all' || github.event.inputs.task == 'build' }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build ccache
      
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-py${{ matrix.python }}
      
      - name: Cache CPM dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.CPM_SOURCE_CACHE }}
          key: ${{ runner.os }}-cpm-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cpm-
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox
      
      - name: Build with CPM
        run: nox -s build-cpm
      
      - name: Run tests
        run: nox -s pytest_skip_install
      
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-py${{ matrix.python }}
          path: dist/*.whl

  build-windows:
    name: Build Windows (Python ${{ matrix.python }})
    runs-on: windows-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.task == 'all' || github.event.inputs.task == 'build' }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      
      - name: Install Ninja
        run: |
          choco install ninja
      
      - name: Cache CPM dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.CPM_SOURCE_CACHE }}
          key: ${{ runner.os }}-cpm-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cpm-
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox
      
      - name: Build with CPM
        run: nox -s build-cpm
      
      - name: Run tests
        run: nox -s pytest_skip_install
      
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-windows-py${{ matrix.python }}
          path: dist/*.whl

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.task == 'all' || github.event.inputs.task == 'docs' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox
      
      - name: Build documentation
        run: nox -s docs
      
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/_build/html/
