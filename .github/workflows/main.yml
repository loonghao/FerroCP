name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - build
          - test
          - lint
          - docs

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Exclude some combinations to reduce CI load
          - os: macos-latest
            python-version: "3.8"
          - os: macos-latest
            python-version: "3.9"
          - os: ubuntu-latest
            python-version: "3.9"
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/pyproject.toml'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scikit-build-core pybind11 cmake
          pip install -e .
      
      - name: Run tests
        if: github.event.inputs.task == 'all' || github.event.inputs.task == 'test' || github.event.inputs.task == '' || github.event_name == 'pull_request'
        run: |
          pip install pytest pytest-cov
          pytest tests/ --cov=eacopy --cov-report=xml:coverage.xml --cov-report=term-missing
      
      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10' && (github.event.inputs.task == 'all' || github.event.inputs.task == 'test' || github.event.inputs.task == '' || github.event_name == 'pull_request')
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true

  lint:
    runs-on: ubuntu-latest
    if: github.event.inputs.task == 'all' || github.event.inputs.task == 'lint' || github.event.inputs.task == '' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/pyproject.toml'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox
      
      - name: Run linting
        run: |
          nox -s lint

  docs:
    runs-on: ubuntu-latest
    if: github.event.inputs.task == 'all' || github.event.inputs.task == 'docs' || github.event.inputs.task == ''
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/pyproject.toml'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox
      
      - name: Build documentation
        run: |
          nox -s docs
