[workspace]
members = [
    "crates/ferrocp-types",
    "crates/ferrocp-io",
    "crates/ferrocp-device",
    "crates/ferrocp-zerocopy",
    "crates/ferrocp-compression",
    "crates/ferrocp-network",
    "crates/ferrocp-sync",
    "crates/ferrocp-config",
    "crates/ferrocp-engine",
    "crates/ferrocp-cli",
    "crates/ferrocp-ffi",      # C-ABI compatible interface for future Python/C++ bindings
    # "crates/ferrocp-python",  # Disabled for now, focusing on exe builds
    "crates/ferrocp-tests",
]
default-members = ["crates/ferrocp-cli"]
resolver = "2"

[workspace.package]
version = "0.2.0"
edition = "2021"
license = "Apache-2.0"
authors = ["Long Hao <hal.long@outlook.com>"]
repository = "https://github.com/loonghao/ferrocp"
homepage = "https://github.com/loonghao/ferrocp"
documentation = "https://loonghao.github.io/ferrocp"
keywords = ["file-copy", "performance", "async", "compression", "cross-platform"]
categories = ["filesystem", "command-line-utilities"]
rust-version = "1.75"

# Workspace-wide dependency management
[workspace.dependencies]
# Async runtime and utilities
tokio = { version = "1.41", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# File system operations
walkdir = "2.4"
filetime = "0.2"
memmap2 = "0.9"

# Compression
zstd = "0.13"
async-compression = { version = "0.4", features = ["tokio", "zstd"] }
lz4_flex = "0.11"
brotli = "8.0"

# Hashing for file deduplication
blake3 = { version = "1.5", features = ["serde"], default-features = false }
sha2 = "0.10"
xxhash-rust = { version = "0.8", features = ["xxh3"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "2.0"
rmp-serde = "1.1"

# Network communication
tokio-util = { version = "0.7", features = ["codec"] }
quinn = "0.11"
h3 = "0.0.8"
h3-quinn = "0.0.6"

# Error handling
thiserror = "2.0"
anyhow = "1.0"
eyre = "0.6"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"

# CLI interface
clap = { version = "4.4", features = ["derive", "color", "suggestions"] }
console = "0.15"
dialoguer = "0.11"

# Progress reporting
indicatif = "0.17"

# Configuration
serde_yaml = "0.9"
toml = "0.8"
config = "0.14"

# Cross-platform utilities
num_cpus = "1.16"
uuid = { version = "1.0", features = ["v4", "serde"] }
once_cell = "1.19"

# Time and date
chrono = { version = "0.4", features = ["serde"] }

# Performance and profiling
criterion = { version = "0.5", features = ["html_reports"] }
pprof = { version = "0.15", features = ["criterion", "flamegraph"] }

# Python bindings (disabled for now, focusing on exe builds)
# pyo3 = { version = "0.24.1", features = ["extension-module", "abi3-py39"] }

# Platform-specific dependencies
[workspace.dependencies.windows]
version = "0.61"
features = [
    "Win32_Foundation",
    "Win32_Storage_FileSystem",
    "Win32_System_IO",
    "Win32_Security",
    "Win32_System_SystemServices",
    "Win32_System_Threading",
    "Win32_System_WindowsProgramming",
    "Win32_System_Registry",
    "Win32_System_SystemInformation",
    "Win32_Storage_InstallableFileSystems",
    "Win32_System_Ioctl",
]

[workspace.dependencies.wmi]
version = "0.13"

[workspace.dependencies.libc]
version = "0.2"

# Development dependencies
[workspace.dependencies.tempfile]
version = "3.8"

[workspace.dependencies.tokio-test]
version = "0.4"

[workspace.dependencies.proptest]
version = "1.4"

[workspace.dependencies.rstest]
version = "0.18"

# Workspace-level configuration
[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
unused_imports = "warn"
# Allow non_local_definitions warning - this is a known issue with PyO3 macros
non_local_definitions = "allow"

# Clippy is disabled for faster builds and to avoid cross-platform issues
# [workspace.lints.clippy]
# Uncomment the above line and add specific lints if needed in the future

# Coverage configuration
[workspace.metadata.tarpaulin]
# Exclude files from coverage
exclude = [
    "*/tests/*",
    "*/benches/*",
    "target/*",
    "python/*",
    "src/main.rs"
]
# Timeout for tests
timeout = 120
# Run in release mode for better performance
release = true
# Include all features
all-features = true

# Modern profile optimizations
[profile.release]
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"
opt-level = 3

[profile.dev]
debug = 2
opt-level = 0
overflow-checks = true

[profile.test]
debug = 2
opt-level = 1

[profile.bench]
debug = 1
lto = "thin"
codegen-units = 16

# Profile-Guided Optimization
[profile.release-pgo]
inherits = "release"
lto = "fat"
codegen-units = 1

# Fast development builds
[profile.dev-fast]
inherits = "dev"
opt-level = 1
debug = 1

